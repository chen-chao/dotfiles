#+TITLE: Shell Configuration

bash 的配置主要有 =.bashrc=, =.bash_profile=, =.bash_logout= 三个文件,
=.bash_profile= 用于 *login* shell, 在用户登录的时候调用, 而 =.bashrc=
则是用于 *interactive* shell, 即从标准输入读取命令. 利用 =putty= 或者 =xterm=
远程登录的终端既是 login shell, 也是 interactive shell; 而通常从图形界面启动的
terminal 都是 interactive shell, 只会读取 =.bashrc=.(因为 =.bash_profile=
在用户登录的时候已经读取过了)

但是 Mac OS 的 terminal 是个例外, 因为在用户登录的时候并不加载 =.bash_profile=, 所以
启动 terminal 时候只会加载 =.bash_profile=, 而不是 =.bashrc=.

所以为了保持一致, 可以让 =.bash_profile= 加载 =~/.bashrc= 的内容.

#+BEGIN_SRC shell :exports code :tangle ~/.bash_profile
  [[ -f ~/.bashrc ]] && . ~/.bashrc
#+END_SRC

** Builtin Commands

#+BEGIN_SRC shell :tangle ~/.bashrc
  # charset for less
  export LESSCHARSET=utf-8

  # bash prompt
  PS1='[\u@\h \W]\$ '

  # history
  HISTSIZE=50000
#+END_SRC


** PATH and environment variables

#+BEGIN_SRC shell :tangle ~/.bashrc
  # git
  export GIT_TERMINAL_PROMPT=1
  # go
  export GOPATH=~/go
  [[ ! -d "$GOPATH" ]] && mkdir $GOPATH
  # ruby
  export GEM_HOME=$(ruby -e 'puts Gem.user_dir')
  # gpg
  export GPG_TTY=$(tty)
  # python env
  export WORKON_HOME=~/.virtualenvs
  [[ ! -d "$WORKON_HOME" ]] && mkdir $WORKON_HOME
  # PATH
  export PATH="~/bin:~/.local/bin:$GOPATH/bin:$GEM_HOME/bin:$PATH"
#+END_SRC

** Sources

#+BEGIN_SRC shell :tangle (when (eq system-type 'gnu/linux) "~/.bashrc")
  # virtualenvwrapper
  source /usr/bin/virtualenvwrapper.sh
  # autojump
  [[ -f /etc/profile.d/autojump.bash ]] && source /etc/profile.d/autojump.bash
  # see /usr/share/bash-completion/completions for more completions
#+END_SRC

#+BEGIN_SRC shell :tangle (when (eq system-type 'darwin) "~/.bashrc")
  [[ -f $(brew --prefix)/etc/profile.d/autojump.sh ]] && source $(brew --prefix)/etc/profile.d/autojump.sh
#+END_SRC

** Clipboard

#+BEGIN_SRC shell :tangle (when (eq system-type 'gnu/linux) "~/.bashrc")
  alias clipboard='xclip -selection clipboard'
  alias Co='clipboard -o'
  alias Ci='clipboard -i'
#+END_SRC

** Xorg

使用 =fcitx= 作为输入法

#+BEGIN_SRC shell :tangle ~/.xprofile
  export GTK_IM_MODULE=fcitx
  export XMODIFIERS=@im=fcitx
  export QT_IM_MODULE=fcitx
#+END_SRC

自定义键盘

#+BEGIN_SRC shell :tangle (when (eq system-type 'darwin) "~/.bashrc")
  test -f ~/dotfiles/custom.keymap && xkbcomp -w 0 ~/dotfiles/custom.keymap $DISPLAY
#+END_SRC

** Utilities

#+BEGIN_SRC shell :tangle ~/.bashrc
  # looping until command done(ensure the command will finish for some reason).
  # TODO: add timeout option
  function loopuntil {
      until $@
      do
	  echo "Retry..."
	  sleep 1
      done
  }

  function enableproxy {
      export http_proxy=${1-socks5://127.0.0.1:1080}
      export https_proxy=${1-socks5://127.0.0.1:1080}
  }

  function disableproxy {
      export http_proxy=
      export https_proxy=
  }
#+END_SRC


** Homebrew

#+BEGIN_SRC shell :tangle (when (eq system-type 'darwin) "~/.bashrc")
  export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles
#+END_SRC
